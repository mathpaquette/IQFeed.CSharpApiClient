image: Visual Studio 2017

version: '{build}'

install:
  - ps: >-
      $FileVersion = Get-Content $env:appveyor_build_folder\VERSION
      
      $Version = If ($env:appveyor_repo_branch -eq "release") {"$FileVersion"} Else {"$FileVersion.$env:appveyor_build_number"}
      
      Update-AppveyorBuild -Version $Version

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

configuration: Release

before_build:
  - nuget restore
  - dotnet restore
  
test_script:
  - cmd: dotnet test .\src\IQFeed.CSharpApiClient.Tests\IQFeed.CSharpApiClient.Tests.csproj
  - cmd: dotnet test .\src\IQFeed.CSharpApiClient.Extensions.Tests\IQFeed.CSharpApiClient.Extensions.Tests.csproj
  - cmd: dotnet test .\src\IQFeed.CSharpApiClient.Extensions.Tests.Integration\IQFeed.CSharpApiClient.Extensions.Tests.Integration.csproj
  
build:
  project: IQFeed.CSharpApiClient.sln
  publish_nuget: true
  publish_nuget_symbols: true
  verbosity: normal

deploy:
  # Deploying to NuGet feed (MyGet.org)
  - provider: NuGet
    name: MyGet
    server: https://www.myget.org/F/inovitex/api/v2/package
    api_key:
      secure: UBKXVuF4UwMea9mcl8hGLaHxOTBu3GNgzPvuEUWIzU+Nf6a8eTtBRyKITBepZl6i
    skip_symbols: false
    symbol_server: https://www.myget.org/F/inovitex/symbols/api/v2/package
    artifact: /.*\.nupkg/

  # Deploying to NuGet feed (NuGet.org)
  - provider: NuGet
    name: NuGet
    on:
      branch: release
    server: https://www.nuget.org/api/v2/package
    api_key:
      secure: TC0O2n6JgnbHGo9yB7aRNAILarC5nRKH5f1BMjF5t+WUge429Pp5RmZxJCTZRP8+
    skip_symbols: false
    symbol_server: https://nuget.smbsrc.net/
    artifact: /.*\.nupkg/